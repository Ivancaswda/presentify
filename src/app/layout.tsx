import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import {Toaster} from "@/components/ui/sonner";
import {ConvexClientProvider} from "@/app/ConvexClientProvider";
import {AuthProvider} from "@/context/authContext";
import Header from "@/app/_components/Header";
import Footer from "@/app/_components/Footer";
import {GoogleOAuthProvider} from "@react-oauth/google";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "presentify",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
      <ConvexClientProvider>

          <AuthProvider>


                <html lang="en">
                  <body
                    className={`${geistSans.variable} ${geistMono.variable} antialiased`}
                  >
                  <GoogleOAuthProvider clientId={process.env.GOOGLE_CLIENT_ID!} >


                          <Header/>

                            {children}
                            <Footer/>
                            <Toaster/>
                  </GoogleOAuthProvider>
                  </body>
                </html>
          </AuthProvider>
      </ConvexClientProvider>
  );
}
